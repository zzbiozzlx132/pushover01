// send-notification.js

// L·ªãch tr√¨nh c·ªßa b·∫°n
const schedule = [
    { time: "06:30", task: "D·∫≠y th√¥i! Chu·∫©n b·ªã cho m·ªôt ng√†y m·ªõi n√†o!" },
    { time: "07:00", task: "ƒê·∫øn gi·ªù ƒëi l√†m r·ªìi, xu·∫•t ph√°t th√¥i!" },
    { time: "12:00", task: "Ngh·ªâ tr∆∞a th√¥i! Nh·ªõ ƒÉn u·ªëng ƒë·∫ßy ƒë·ªß nh√©." },
    { time: "12:30", task: "Power Nap 15 ph√∫t ho·∫∑c l√™n k·∫ø ho·∫°ch chi·ªÅu nay." },
    { time: "17:15", task: "Tan l√†m r·ªìi, l√™n xe v·ªÅ nh√† c·∫©n th·∫≠n nh√©!" },
    { time: "19:00", task: "Gi·ªù V√†ng Gia ƒê√¨nh! Ch∆°i v·ªõi con th√¥i." },
    { time: "21:30", task: "B·∫Øt ƒë·∫ßu gi·ªù 'Deep Work' cho t∆∞∆°ng lai!" },
    { time: "22:45", task: "T·∫Øt m√°y, b·∫Øt ƒë·∫ßu 'H·∫° nhi·ªát' ƒë·ªÉ chu·∫©n b·ªã ng·ªß." },
    { time: "23:15", task: "L√™n gi∆∞·ªùng ng·ªß th√¥i! Ch√∫c ng·ªß ngon." }
];

// L·∫•y kh√≥a API t·ª´ GitHub Secrets
const userKey = process.env.PUSHOVER_USER_KEY;
const apiToken = process.env.PUSHOVER_API_TOKEN;

if (!userKey || !apiToken) {
    console.error("L·ªói: Kh√¥ng t√¨m th·∫•y PUSHOVER_USER_KEY ho·∫∑c PUSHOVER_API_TOKEN. H√£y ki·ªÉm tra l·∫°i GitHub Secrets.");
    process.exit(1); // Tho√°t n·∫øu thi·∫øu key
}

// H√†m l·∫•y gi·ªù hi·ªán t·∫°i ·ªü Vi·ªát Nam (UTC+7)
function getCurrentVietnamTime() {
    const now = new Date();
    // Chuy·ªÉn ƒë·ªïi sang m√∫i gi·ªù Asia/Ho_Chi_Minh
    const vietnamTime = new Date(now.toLocaleString('en-US', { timeZone: 'Asia/Ho_Chi_Minh' }));
    const hours = vietnamTime.getHours().toString().padStart(2, '0');
    const minutes = vietnamTime.getMinutes().toString().padStart(2, '0');
    return `${hours}:${minutes}`;
}

// H√†m g·ª≠i th√¥ng b√°o qua Pushover
async function sendPushoverNotification(task) {
    console.log(`ƒê·∫øn gi·ªù! ƒêang g·ª≠i th√¥ng b√°o: "${task}"`);
    try {
        const response = await fetch("https://api.pushover.net/1/messages.json", {
            method: "POST",
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
                token: apiToken,
                user: userKey,
                title: "üîî Nh·∫Øc nh·ªü l·ªãch tr√¨nh!",
                message: task,
                sound: "pushover"
            })
        });

        if (response.ok) {
            console.log("G·ª≠i th√¥ng b√°o th√†nh c√¥ng!");
        } else {
            const errorData = await response.json();
            console.error("G·ª≠i th√¥ng b√°o th·∫•t b·∫°i:", errorData);
        }
    } catch (error) {
        console.error("L·ªói m·∫°ng khi g·ª≠i th√¥ng b√°o:", error);
    }
}

// H√†m ch√≠nh ƒë·ªÉ ki·ªÉm tra l·ªãch tr√¨nh
function checkSchedule() {
    const currentTime = getCurrentVietnamTime();
    console.log(`Ki·ªÉm tra l√∫c: ${currentTime} (Gi·ªù Vi·ªát Nam)`);

    const scheduledTask = schedule.find(item => item.time === currentTime);
    if (scheduledTask) {
        sendPushoverNotification(scheduledTask.task);
    } else {
        console.log("Ch∆∞a ƒë·∫øn gi·ªù th√¥ng b√°o.");
    }
}

// Ch·∫°y h√†m ch√≠nh
checkSchedule();
